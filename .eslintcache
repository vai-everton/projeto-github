[{"/home/everton/IPDEC/projeto1/projeto-github/src/index.tsx":"1","/home/everton/IPDEC/projeto1/projeto-github/src/App.tsx":"2","/home/everton/IPDEC/projeto1/projeto-github/src/routes/index.tsx":"3","/home/everton/IPDEC/projeto1/projeto-github/src/pages/Dashboard/Dashboard.tsx":"4","/home/everton/IPDEC/projeto1/projeto-github/src/pages/Dashboard/styles.ts":"5","/home/everton/IPDEC/projeto1/projeto-github/src/styles/global.ts":"6","/home/everton/IPDEC/projeto1/projeto-github/src/pages/Repository/index.tsx":"7","/home/everton/IPDEC/projeto1/projeto-github/src/services/api.ts":"8"},{"size":196,"mtime":1609814964849,"results":"9","hashOfConfig":"10"},{"size":324,"mtime":1609852477535,"results":"11","hashOfConfig":"10"},{"size":386,"mtime":1609852418720,"results":"12","hashOfConfig":"10"},{"size":2863,"mtime":1609861312822,"results":"13","hashOfConfig":"10"},{"size":1933,"mtime":1609860821281,"results":"14","hashOfConfig":"10"},{"size":340,"mtime":1609816848721,"results":"15","hashOfConfig":"10"},{"size":133,"mtime":1609858920441,"results":"16","hashOfConfig":"10"},{"size":117,"mtime":1609857054405,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3mor65",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/everton/IPDEC/projeto1/projeto-github/src/index.tsx",[],"/home/everton/IPDEC/projeto1/projeto-github/src/App.tsx",[],"/home/everton/IPDEC/projeto1/projeto-github/src/routes/index.tsx",[],"/home/everton/IPDEC/projeto1/projeto-github/src/pages/Dashboard/Dashboard.tsx",["35"],"import React, { FormEvent, useState, useEffect } from 'react'\nimport {Title, Form, Repositorie, Error}  from './styles'\n\nimport Logo from '../../assets/1587379765556-attachment.svg'\n\nimport api from '../../services/api'\n\n\ninterface Repositorie {\n    full_name:string;\n    description:string;\n    owner: {\n        login:string;\n        avatar_url: string;\n    };\n}\n\nconst Dashboard:React.FC = () => {\n\n    const [newRepo, setNewRepo] = useState('');\n\n    const [repositories, setRepositories] = useState<Repositorie[]> (() => {\n        const storagedRepositories = localStorage.getItem('@GitHubExplorer:repositories');\n\n        if (storagedRepositories) {\n            return JSON.parse(storagedRepositories);\n        } \n        return [];\n    })\n\n    const [inputError, setInputError] = useState('');\n\n    useEffect(() => {\n\n    })\n\n    useEffect(() => {\n        localStorage.setItem('@GitHubExplorer:repositories', JSON.stringify(repositories));\n    }, [repositories])\n\n    async function handleRepositoryRequest(\n        event:FormEvent<HTMLFormElement>\n    ):Promise<void> {\n\n        event.preventDefault();\n\n\n\n        if(!newRepo) {\n            setInputError('Digite o autor/nome do reposit처rio');\n        }\n        else {\n            try {\n                const response = await api.get<Repositorie>(`/repos/${newRepo}`)\n\n                const repository = response.data;\n\n\n                setRepositories([...repositories, repository])\n                setNewRepo(newRepo);\n                setInputError('');\n            } catch(err) { \n                setInputError('Erro na busca. N찾o encontrado')\n            }\n        }\n    }\n\n    return (\n        <>\n            <img src={ Logo } alt=\"GitHub Explorer\" />\n            <Title>Explore reposit처rios no github</Title>\n\n            <Form hasError={!!inputError} onSubmit={handleRepositoryRequest}>\n                <input\n                    value={newRepo}\n                    onChange={(e) => setNewRepo(e.target.value)}\n                    placeholder=\"Digite o nome do reposit처rio\" \n                />\n\n                <button type=\"submit\" >Pesquisar</button>\n            </Form>\n\n            { inputError && <Error>{inputError}</Error> }\n\n            <Repositorie>\n                <>\n                {repositories.map(repository => (\n                    <a key={repository.full_name} href=\"teste\">\n                        <img\n                            src={repository.owner.avatar_url}\n                            alt={repository.owner.login}\n                        />\n                        <div>\n                            <strong>{repository.full_name}</strong>\n                            <p>{repository.description}</p>\n                        </div>\n                    </a>\n                ))}\n                </>\n            </Repositorie>\n        </>\n    )\n}\n\nexport default Dashboard;\n","/home/everton/IPDEC/projeto1/projeto-github/src/pages/Dashboard/styles.ts",[],"/home/everton/IPDEC/projeto1/projeto-github/src/styles/global.ts",[],"/home/everton/IPDEC/projeto1/projeto-github/src/pages/Repository/index.tsx",[],"/home/everton/IPDEC/projeto1/projeto-github/src/services/api.ts",[],{"ruleId":"36","severity":1,"message":"37","line":9,"column":11,"nodeType":"38","messageId":"39","endLine":9,"endColumn":22},"@typescript-eslint/no-redeclare","'Repositorie' is already defined.","Identifier","redeclared"]